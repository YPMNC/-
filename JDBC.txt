package com.wang.util;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public final class DBUtil {
	
	private static String driverName="org.gjt.mm.mysql.Driver";
	
	private static String url="jdbc:mysql://127.0.0.1:3306/homework?characterEncoding=utf-8";
	
	private static String username="root";

	private static String pwd="lovo";

	private static Connection con=null;

	private static PreparedStatement ps=null;

	private static ResultSet rs=null;
	
	//将构成器私有化，不让其他类创建对象
	private DBUtil(){
		
	}
	/**
	 * 获得连接
	 * @return 连接对象
	 */
	public static Connection getConnection(){
		
		try {
			Class.forName(driverName);
			con = DriverManager.getConnection(url,username,pwd);
			//把jdbc的自动提交改为false;（事务）
			con.setAutoCommit(false);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return con;
	}
	
	/**
	 *  关闭连接
	 */
	public static void close(){
		if(rs!=null){
			try {
				rs.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		if(ps!=null){
			try {
				ps.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		if(con!=null){
			try {
				con.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
	}
	  /**
	   * 执行增删改
	   * @param sql 要编译的sql语句
	   * @param args  要传入的占位符 （参数数组）
	   */
	  public static void  executeUpdate(String sql,Object[] args){
		  
		  con = getConnection();
		 
		  try {
			ps = con.prepareStatement(sql);
			//设置占位符
			if(args!=null){
				for(int i=0;i<args.length;i++){
					ps.setObject(i+1,args[i]);
				}
			}
			ps.executeUpdate();
			//提交数据
			con.commit();
		} catch (SQLException e) {
			e.printStackTrace();
			//回滚
			try {
				con.rollback();
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
		}finally{
			 close();
		}
	  }
	  /**
	   *  执行查询
	   * @param sql  要编译的sql语句
	   * @param args 占位符数组
	   * @return  结果集
	   */
	  public static ResultSet executeQuery(String sql,Object[] args){
		  con = getConnection();
		  try {
			ps = con.prepareStatement(sql);
			//设置占位符
			if(args!=null){
				for(int i=0;i<args.length;i++){
					ps.setObject(i+1,args[i]);
				}
			}
			rs = ps.executeQuery();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		  return rs;
	  }
}
